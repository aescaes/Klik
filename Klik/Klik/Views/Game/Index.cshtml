@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Game";
}

<div id="difficulty-menu">
    <div class="row">
        <div class="col-md-4 col-md-offset-4">
            <div class="list-group">
                <button class="list-group-item btn-difficulty" id="easy">Easy</button>
                <button class="list-group-item btn-difficulty" id="medium">Medium</button>
                <button class="list-group-item btn-difficulty" id="hard">Hard</button>
            </div>
        </div>
    </div>
</div>

<div id="game-status">
    <p>
        <strong>Time: </strong><span id="game-time">10s</span>
    </p>
    <p>
        <strong>Score: </strong><span id="game-score">0</span>
    </p>
</div>

<div id="game-section">
    <p id="countdown">The game will start in 3</p>
</div>

<div id="game-result">
    <p><strong>Score: </strong><span id="result"></span></p>
    <p><button class="btn-play"><i class="fa fa-rotate-right"></i> Play Again</button></p>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            var score;

            /*
             * fills page's remaining vertical space for game section
             */
            function gameSectionFillSpace() {
                var remainingSpace = $(window).height() - $("#header").height();
                $("#game-section").height(remainingSpace - 120);
            }

            /*
             * returns random number with min and max
             */
            function randomNum(min, max) {
                return Math.floor(Math.random() * max) + min;
            }

            /*
             * returns random shape
             */
            function getShape() {
                var shape = randomNum(1, 2);

                switch(shape) {
                    case 1:
                        shape = "circle";
                        break;
                    case 2:
                        shape = "square";
                        break;
                }

                return shape;
            }

            /*
             * new game
             */
            function newGame() {
                $("#game-result").fadeOut("slow", function() {
                    $("#difficulty-menu").fadeIn("slow");
                });
            }

            /*
             * show result
             */
            function showResult() {
                $("#game-status, #game-section").fadeOut("slow", function () {
                    $("#result").html(score);
                    $("#game-result").fadeIn("slow");
                });

                $(".btn-play").click(function () {
                    newGame();
                });
            }

            /*
             * creates new element
             */
            function newElement(shape, size) {
                var element = ".element-" + shape;

                //removes current element first before creating new one
                $(".element").remove();

                $("#game-section").append("<button class='element-" + shape + " element'></button>");

                //element size
                $(element).width(size);
                $(element).height(size);

                //element random position
                $(element).css("top", randomNum(0, $("#game-section").height() - size));
                $(element).css("left", randomNum(0, $("#game-section").width() - size));

                // updates score
                $(".element").click(
                    // increments score by 1
                    function () {
                        score++;
                        $("#game-score").html(score);
                    }
                );
            }

            /*
             * starts game
             */
            function startGame(size, interval) {
                var time = 10; //game time in second
                // start time
                var gameTime = setInterval(function () {
                    time--;
                    $("#game-time").html(time + "s");

                    if (time === 0) {
                        clearInterval(gameTime);
                        $(".element").remove();
                    }
                }, 1000);

                // create new element on initialization
                newElement(getShape(), size);

                var elementInterval = setInterval(
                    /*
                     * removes current element after the set interval
                     * in second then immediately creates new element
                     */
                    function () {
                        if (time > 0) {
                            newElement(getShape(), size);
                        }

                        if (time === 0) {
                            clearInterval(elementInterval);
                            showResult();
                        }
                    },
                    interval * 1000
                );
            }

            /*
             * transition to game section after choosing difficulty
             */
            function enterGame(size, interval) {
                score = 0; // reset score
                $("#game-score").html(score);
                $("#game-time").html("10s");
                $("#countdown").show().html("The game will start in 3");

                $("#difficulty-menu").fadeOut("slow", function () {
                    $("#game-section, #game-status").fadeIn("slow",
                        /*
                         * countdown
                         */
                        function () {
                            var countdownTime = 3; //countdown time in second
                            // countdown before game start
                            var countdown = setInterval(function () {
                                countdownTime--;
                                $("#countdown").html("The game will start in " + countdownTime);

                                if (countdownTime === 0) {
                                    clearInterval(countdown);
                                    $("#countdown").hide();

                                    // game start
                                    startGame(size, interval);
                                }
                            }, 1000);
                        }
                    );
                });
            }

            // fill space for game section
            gameSectionFillSpace(); 

            // fill space for game section in resize
            $(window).resize(function () {
                gameSectionFillSpace();
            });

            // set difficulty
            $(".btn-difficulty").click(function() {
                //difficulty properties
                var difficulty = $(this).attr("id");
                var interval = 0;
                var size = 0;

                //setting difficulty properties
                switch (difficulty) {
                case "easy":
                    interval = 3;
                    size = 100;
                    break;
                case "medium":
                    interval = 2;
                    size = 50;
                    break;
                case "hard":
                    interval = 1;
                    size = 30;
                    break;
                }

                enterGame(size, interval);
            });

            
        });
    </script>
}